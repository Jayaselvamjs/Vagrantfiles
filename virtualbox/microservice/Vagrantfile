Vagrant.configure("2") do |config|
	config.hostmanager.enabled = true
	config.hostmanager.manager_host = true

## DataBase VM ####
    config.vm.define "db01" do |db01|    
        db01.vm.box = "jacobw/fedora35-arm64"
        db01.vm.network "private_network", ip: "192.168.56.11"
        db01.vm.provider "virtualbox" do |vb|
            vb.memory = "600"
        end
        db01.vm.provision "shell", inline: <<-SHELL
            sudo useradd -m -s /bin/bash -p "$(openssl passwd -1 admin123)" dbuser
			sudo usermod -aG sudo dbuser
			echo #################################################################
			sudo -i 
			tee -i /etc/hosts <<EOF
			192.168.56.11	db01
			192.168.56.12	mc01
			192.168.56.13	rmq01
			192.168.56.14	app01
			192.168.56.15	web01
			EOF
			yum update -y
			yum install epel-release -y
			yum install git mariadb-server -y
			systemctl start mariadb
			systemctl enable mariadb
			mysql -u root -e 'ALTER USER "root"@"localhost" IDENTIFIED BY "admin123";'
			mysql -u root -padmin123 -e 'CREATE database accounts;'
			mysql -u root -padmin123 -e 'GRANT ALL PRIVILEGES ON account.* TI "admin"@"%" IDENTIFIED BY "admin123";'
			mysql -u root -padmin123 -e 'FLUSH PRIVILEGES;'
			git clone -b main https://github.com/hkhcoder/vprofile-project.git
			cd vprofile-project
			mysql -u root -padmin123 account < src/main/resources/db-backup.sql
			mysql -u root -padmin123 account -e 'show tables;'
			systemctl restart mariadb
        SHELL
    end
## Mencache VM ####
    config.vm.define "mc01" do |mc01|    
        mc01.vm.box = "jacobw/fedora35-arm64"
        mc01.vm.network "private_network", ip: "192.168.56.12"
        mc01.vm.provider "virtualbox" do |vb|
            vb.memory = "600"
        end
        mc01.vm.provision "shell", inline: <<-SHELL
			sudo useradd -m -s /bin/bash -p "$(openssl passwd -1 admin123)" mcuser
			sudo usermod -aG sudo mcuser
			echo #################################################################
			sudo -i 
			tee -i /etc/hosts <<EOF
			192.168.56.11	db01
			192.168.56.12	mc01
			192.168.56.13	rmq01
			192.168.56.14	app01
			192.168.56.15	web01
			EOF
			sudo dnf install epel-release -y
			sudo dnf install memcached -y
			sudo systemctl start memcached
			sudo systemctl enable memcached
			sudo systemctl status memcached
			sudosed -i 's/127.0.0.1/0.0.0.0/g' /etc/sysconfig/memcached
			sudo systemctl restart memcached
			firewall-cmd --add-port=11211/tcp
			firewall-cmd --runtime-to-permanent
			firewall-cmd --add-port-11111/udp		
        SHELL
    end
## RabbitMQ VM ####
    config.vm.define "rmq01" do |rmq01|    
        rmq01.vm.box = "jacobw/fedora35-arm64"
        rmq01.vm.network "private_network", ip: "192.168.56.13"
        rmq01.vm.provider "virtualbox" do |vb|
            vb.gui = true
            vb.memory = "600"
        end
        rmq01.vm.provision "shell", inline: <<-SHELL
            sudo useradd -m -s /bin/bash -p "$(openssl passwd -1 admin123)" rmquser
			sudo usermod -aG sudo rmquser
			echo #################################################################
			sudo -i 
			tee -i /etc/hosts <<EOF
			192.168.56.11	db01
			192.168.56.12	mc01
			192.168.56.13	rmq01
			192.168.56.14	app01
			192.168.56.15	web01
			EOF
			yum install epel-release -y
			sudo yum install wget -y
			dnf -y install centos-release-rabbitmq-38
			dnf --enable repo=centos-rabbitmq-38 -yum
			dnf install rabbitmq-server
			systemctl enable --now rabbitmq-server
			firewall-cmd --add-port=5672/tcp
			firewall-cmd --runtime-to-permanent
			sudo systemctl status rabbitmq-server
			sudo sh -c 'echo "[{rabbit,[{loopback-users,[]}]}]."> /etc/rabbitmq/rabbitmq-config'
			sudo rabbitmqctl add-user test test
			sudo rabbitmqctl restart rabbitmq-server
			SHELL
    end
## Tomcat VM ####
    config.vm.define "app01" do |app01|    
        app01.vm.box = "jacobw/fedora35-arm64"
        app01.vm.network "private_network", ip: "192.168.56.14"
        app01.vm.provider "virtualbox" do |vb|
            vb.gui = true
            vb.memory = "1024"
        end
        app01.vm.provision "shell", inline: <<-SHELL
            sudo useradd -m -s /bin/bash -p "$(openssl passwd -1 admin123)" appuser
			sudo usermod -aG sudo appuser
			echo #################################################################
			sudo -i 
			tee -i /etc/hosts <<EOF
			192.168.56.11	db01
			192.168.56.12	mc01
			192.168.56.13	rmq01
			192.168.56.14	app01
			192.168.56.15	web01
			EOF
			yum /etc/hostsyum install epel-release -y
			dnf -y install java-ll-openjdk-devel
			dnf install git maven wget -y 
			sudo yum install tomcat10 tomcat10-admin tomcat10-docs tomcat10-common -y
			mv /var/lib/tomcat10 /opt/ 
			git clone -b main https://github.com/hkhcode/vprofile-project.git
			cat vprofile-project/src/main/resource/app.properities
			cd vprofile-project
			mvn install
			ls
			target
			rm -rf /opt/tomcat/webapps/ROOT 
			cp target/vprofile-v2.war /opt/tomcat/webapps
			systemctl restart Tomcat			
        SHELL
    end
## Nginx VM ####
    config.vm.define "web01" do |web01|    
        web01.vm.box = "spox/ubuntu-arm"
        web01.vm.network "private_network", ip: "192.168.56.15"
        web01.vm.provider "virtualbox" do |vb|
            vb.gui = true
            vb.memory = "600"
            vb.cpus = "2"
        end
        web01.vm.provision "shell", inline: <<-SHELL
            sudo useradd -m -s /bin/bash -p "$(openssl passwd -1 admin123)" webuser
			sudo usermod -aG sudo webuser
			echo #################################################################
			sudo -i 
			tee -i /etc/hosts <<EOF
			192.168.56.11	db01
			192.168.56.12	mc01
			192.168.56.13	rmq01
			192.168.56.14	app01
			192.168.56.15	web01
			EOF
			sudo apt update && sudo apt upgrade
			sudo apt install Nginx
			sudo tee -i /etc/nginx/sites-available/vproapp <<EOT
			upstream vproapp {
				server app01:8080
			}
			server {
				listen 80;
			location/{
				proxy-pass http://vproapp;
			}
			}
			EOT
			
			rm -rf /etc/nginx/sites-available/000-default
			ln -s /etc/nginx/sites-available/vproapp etc/nginx/sites-enabled/vproapp
			systemctl restart nginx
        SHELL
    end
end

